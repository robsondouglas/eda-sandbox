version: '3.9'

services:
  zookeeper:
    image: docker.io/bitnami/zookeeper:3.8
    hostname: eda-prd-zookeeper
    container_name: eda-prd-zookeeper
    environment:
      ALLOW_ANONYMOUS_LOGIN: 'yes'
    networks:
      - eda-prd-sandbox

  kafka1:
    image: docker.io/bitnami/kafka:3.1
    hostname: eda-prd-kafka-01
    container_name: eda-prd-kafka-01
    environment:
      KAFKA_BROKER_ID: '0'
      KAFKA_CFG_ZOOKEEPER_CONNECT: 'eda-prd-zookeeper:2181'
      KAFKA_LISTENERS: PLAINTEXT://eda-prd-kafka-01:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://eda-prd-kafka-01:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_DEFAULT_REPLICATION_FACTOR: '2'
      KAFKA_NUM_PARTITIONS: '2'
      ALLOW_PLAINTEXT_LISTENER: 'yes'
      KAFKA_DELETE_TOPIC_ENABLE: 'true'
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: '0'
    networks:
      - eda-prd-sandbox
    depends_on:
      - zookeeper

  kafka2:
    image: docker.io/bitnami/kafka:3.1
    hostname: eda-prd-kafka-02
    container_name: eda-prd-kafka-02
    environment:
      KAFKA_BROKER_ID: '1'
      KAFKA_CFG_ZOOKEEPER_CONNECT: 'eda-prd-zookeeper:2181'
      KAFKA_LISTENERS: PLAINTEXT://eda-prd-kafka-02:29093,PLAINTEXT_HOST://localhost:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://eda-prd-kafka-02:29093,PLAINTEXT_HOST://localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_DEFAULT_REPLICATION_FACTOR: '2'
      KAFKA_NUM_PARTITIONS: '2'
      ALLOW_PLAINTEXT_LISTENER: 'yes'
      KAFKA_DELETE_TOPIC_ENABLE: 'true'
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: '0'
    networks:
      - eda-prd-sandbox
    depends_on:
      - zookeeper

  kafka3:
    image: docker.io/bitnami/kafka:3.1
    hostname: eda-prd-kafka-03
    container_name: eda-prd-kafka-03
    environment:
      KAFKA_BROKER_ID: '2'
      KAFKA_CFG_ZOOKEEPER_CONNECT: 'eda-prd-zookeeper:2181'
      KAFKA_LISTENERS: PLAINTEXT://eda-prd-kafka-03:29094,PLAINTEXT_HOST://localhost:9094
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://eda-prd-kafka-03:29094,PLAINTEXT_HOST://localhost:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_DEFAULT_REPLICATION_FACTOR: '2'
      KAFKA_NUM_PARTITIONS: '2'
      ALLOW_PLAINTEXT_LISTENER: 'yes'
      KAFKA_DELETE_TOPIC_ENABLE: 'true'
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: '0'
    networks:
      - eda-prd-sandbox
    depends_on:
      - zookeeper

  rabbit:
    image: docker.io/rabbitmq:3.9.14-management
    container_name: eda-prd-rabbit
    # ports: 
    #   - 15672:15672
    networks:
      - eda-prd-sandbox
  
  membd:
    hostname: eda-prd-membd
    container_name: eda-prd-membd
    image: docker.io/robsondouglas/eda-sandbox-bdmem:latest
    environment:
      WRITE_LOG: 1
      PORT_NUMBER: 5001
    networks:
      - eda-prd-sandbox

  ws:
    hostname: eda-prd-ws
    container_name: eda-prd-ws
    image: docker.io/robsondouglas/eda-sandbox-websocket:latest    
    environment:
      WRITE_LOG: 1
      PORT_NUMBER: 5002
    networks:
      - eda-prd-sandbox

  apivote:
    hostname: eda-prd-api-vote
    container_name: eda-prd-api-vote
    image: docker.io/robsondouglas/eda-sandbox-apivote:latest
    ports:
      - 5000:5050 #bind da porta que a api vai utilizar pra disponibilizar o serviço http
    environment:
      WRITE_LOG: 1
      PORT_NUMBER: 5050 #porta que a api vai utilizar pra disponibilizar o serviço http
      QUEUE_URL: amqp://eda-prd-rabbit
      DB_URL:  http://eda-prd-membd:5001/bd
    depends_on:
      - rabbit
    networks:
      - eda-prd-sandbox

  wrkvote:
    hostname: eda-prd-wrk-vote
    container_name: eda-prd-wrk-vote
    image: docker.io/robsondouglas/eda-sandbox-workervote:latest
    environment:
      WRITE_LOG: 1
      QUEUE_URL: amqp://eda-prd-rabbit
      KAFKA_SERVER: "eda-prd-kafka-01:29092, eda-prd-kafka-02:29093, eda-prd-kafka-03:29094"
      KAFKA_GROUP_ID: "eda-prd-01"
      DB_URL:  http://eda-prd-membd:5001/bd
      WS_URL:  http://eda-prd-eda-prd-ws:5002/
    networks:
      - eda-prd-sandbox
    depends_on:
      - kafka1
      - kafka2
      - kafka3
      - rabbit
      - membd

  wrkaggr:
    hostname: eda-prd-wrk-aggr
    container_name: eda-prd-wrk-aggr
    image: docker.io/robsondouglas/eda-sandbox-workeraggregator:latest 
    environment:
      WRITE_LOG: 1
      KAFKA_SERVER: "eda-prd-kafka-01:29092, eda-prd-kafka-02:29093, eda-prd-kafka-03:29094"
      KAFKA_GROUP_ID: "eda-prd-01"
      DB_URL:  http://eda-prd-membd:5001/bd
      WS_URL:  http://eda-prd-eda-prd-ws:5002/
    depends_on:
      - kafka1
      - kafka2
      - kafka3
      - ws
    networks:
      - eda-prd-sandbox

networks:
  eda-prd-sandbox:
    driver: bridge